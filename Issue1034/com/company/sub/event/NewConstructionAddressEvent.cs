// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.7.7.5
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace com.company.sub.@event
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	public partial class NewConstructionAddressEvent : ISpecificRecord
	{
		public static Schema _SCHEMA = Schema.Parse("{\"type\":\"record\",\"name\":\"NewConstructionAddressEvent\",\"namespace\":\"com.company.su" +
				"b.event\",\"fields\":[{\"name\":\"eventId\",\"doc\":\"@required: true, @description: uniqu" +
				"e id (UUID version 4 and variant 2) for an event, @examples: d15f36fe-ab1e-4d5c-" +
				"9a04-a1827ac0c330\",\"type\":\"string\"},{\"name\":\"eventType\",\"doc\":\"@required: true, " +
				"@description: operation type for event, @examples: created|updated|deleted\",\"typ" +
				"e\":\"string\"},{\"name\":\"constructionAddressId\",\"doc\":\"@required: true, @descriptio" +
				"n: unique nds id for a construction address object, @examples: 35051923\",\"type\":" +
				"\"string\"},{\"name\":\"units\",\"doc\":\"@required: false, @description: unit numbers wi" +
				"ll be available for multi-dwelling unit - demand points, @examples: unit number " +
				"details\",\"default\":null,\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\"," +
				"\"name\":\"Unit\",\"namespace\":\"com.company.sub.event\",\"fields\":[{\"name\":\"unitNumber\"" +
				",\"doc\":\"@required: false, @description: a specific unit number for an individual" +
				" unit within a multi-dwelling unit, @examples: 1|101\",\"default\":null,\"type\":[\"nu" +
				"ll\",\"string\"]},{\"name\":\"type\",\"doc\":\"@required: false, @description: the type of" +
				" the unit, @examples: Apartment|Building\",\"default\":null,\"type\":[\"null\",\"string\"" +
				"]},{\"name\":\"story\",\"doc\":\"@required: false, @description: the story or floor num" +
				"ber for the unit, @examples: 1|2|3\",\"default\":null,\"type\":[\"null\",\"string\"]},{\"n" +
				"ame\":\"fiberCount\",\"doc\":\"@required: false, @description: the number of fibers av" +
				"ailable at the unit, @examples: 1|4\",\"default\":null,\"type\":[\"null\",\"string\"]}]}}" +
				"]},{\"name\":\"constructionIndicator\",\"doc\":\"@required: true, @description: constru" +
				"ction stages (yes means in construction stage and no means in completed stage), " +
				"@examples: yes|no\",\"type\":\"string\"}]}");
		/// <summary>
		/// @required: true, @description: unique id (UUID version 4 and variant 2) for an event, @examples: d15f36fe-ab1e-4d5c-9a04-a1827ac0c330
		/// </summary>
		private string _eventId;
		/// <summary>
		/// @required: true, @description: operation type for event, @examples: created|updated|deleted
		/// </summary>
		private string _eventType;
		/// <summary>
		/// @required: true, @description: unique nds id for a construction address object, @examples: 35051923
		/// </summary>
		private string _constructionAddressId;
		/// <summary>
		/// @required: false, @description: unit numbers will be available for multi-dwelling unit - demand points, @examples: unit number details
		/// </summary>
		private IList<com.company.sub.@event.Unit> _units;
		/// <summary>
		/// @required: true, @description: construction stages (yes means in construction stage and no means in completed stage), @examples: yes|no
		/// </summary>
		private string _constructionIndicator;
		public virtual Schema Schema
		{
			get
			{
				return NewConstructionAddressEvent._SCHEMA;
			}
		}
		/// <summary>
		/// @required: true, @description: unique id (UUID version 4 and variant 2) for an event, @examples: d15f36fe-ab1e-4d5c-9a04-a1827ac0c330
		/// </summary>
		public string eventId
		{
			get
			{
				return this._eventId;
			}
			set
			{
				this._eventId = value;
			}
		}
		/// <summary>
		/// @required: true, @description: operation type for event, @examples: created|updated|deleted
		/// </summary>
		public string eventType
		{
			get
			{
				return this._eventType;
			}
			set
			{
				this._eventType = value;
			}
		}
		/// <summary>
		/// @required: true, @description: unique nds id for a construction address object, @examples: 35051923
		/// </summary>
		public string constructionAddressId
		{
			get
			{
				return this._constructionAddressId;
			}
			set
			{
				this._constructionAddressId = value;
			}
		}
		/// <summary>
		/// @required: false, @description: unit numbers will be available for multi-dwelling unit - demand points, @examples: unit number details
		/// </summary>
		public IList<com.company.sub.@event.Unit> units
		{
			get
			{
				return this._units;
			}
			set
			{
				this._units = value;
			}
		}
		/// <summary>
		/// @required: true, @description: construction stages (yes means in construction stage and no means in completed stage), @examples: yes|no
		/// </summary>
		public string constructionIndicator
		{
			get
			{
				return this._constructionIndicator;
			}
			set
			{
				this._constructionIndicator = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.eventId;
			case 1: return this.eventType;
			case 2: return this.constructionAddressId;
			case 3: return this.units;
			case 4: return this.constructionIndicator;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.eventId = (System.String)fieldValue; break;
			case 1: this.eventType = (System.String)fieldValue; break;
			case 2: this.constructionAddressId = (System.String)fieldValue; break;
			case 3: this.units = (IList<com.company.sub.@event.Unit>)fieldValue; break;
			case 4: this.constructionIndicator = (System.String)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
